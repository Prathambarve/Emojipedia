{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\web development\\\\Again\\\\React.js\\\\mapping-components-practice\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\web development\\\\Again\\\\React.js\\\\mapping-components-practice\\\\src\\\\components\\\\App.jsx\";\nimport React, { useState } from \"react\";\nimport Card from \"./Card\";\nimport emojipedia from \"../emojipedia\";\n\nfunction EmojiData(emojipedia) {\n  return /*#__PURE__*/React.createElement(Card, {\n    key: emojipedia.name,\n    emoji: emojipedia.emoji,\n    name: emojipedia.name,\n    meaning: emojipedia.meaning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 12\n    }\n  });\n}\n\nfunction App() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchTerm = _useState2[0],\n      setSearchTerm = _useState2[1];\n\n  function EmojiDataFilter(emojipedia) {\n    if (searchTerm == \"\") {\n      return EmojiData;\n    } else if (emojipedia.name.toLocaleLowerCase().includes(searchTerm.toLowerCase())) {\n      return EmojiData;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \" Emojipedia\\uD83D\\uDE42 \"), \" \"), \" \", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search Emoji...\",\n    onChange: function onChange(event) {\n      setSearchTerm(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }\n  }), \" \"), /*#__PURE__*/React.createElement(\"dl\", {\n    className: \"dictionary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, \" \", emojipedia.filter(EmojiDataFilter).map(EmojiData), \" \"));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/web development/Again/React.js/mapping-components-practice/src/components/App.jsx"],"names":["React","useState","Card","emojipedia","EmojiData","name","emoji","meaning","App","searchTerm","setSearchTerm","EmojiDataFilter","toLocaleLowerCase","includes","toLowerCase","event","target","value","filter","map"],"mappings":";;AAAA,OAAOA,KAAP,IACEC,QADF,QAEO,OAFP;AAGA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,eAAvB;;AAEA,SAASC,SAAT,CAAmBD,UAAnB,EAA+B;AAC7B,sBAAS,oBAAE,IAAF;AAAO,IAAA,GAAG,EACfA,UAAU,CAACE,IADN;AAGP,IAAA,KAAK,EACHF,UAAU,CAACG,KAJN;AAMP,IAAA,IAAI,EACFH,UAAU,CAACE,IAPN;AASP,IAAA,OAAO,EACLF,UAAU,CAACI,OAVN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAT;AAaC;;AAED,SAASC,GAAT,GAAe;AAEb,kBAAoCP,QAAQ,CAAC,EAAD,CAA5C;AAAA;AAAA,MAAOQ,UAAP;AAAA,MAAmBC,aAAnB;;AAEA,WAASC,eAAT,CAAyBR,UAAzB,EAAqC;AACnC,QAAIM,UAAU,IAAI,EAAlB,EAAsB;AACpB,aAAOL,SAAP;AACD,KAFD,MAEO,IAAID,UAAU,CAACE,IAAX,CAAgBO,iBAAhB,GAAoCC,QAApC,CAA6CJ,UAAU,CAACK,WAAX,EAA7C,CAAJ,EAA4E;AACjF,aAAOV,SAAP;AACD;AACF;;AAED,sBAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAFA,MAFA,oBAMK;AACC,IAAA,IAAI,EAAG,MADR;AAEL,IAAA,WAAW,EAAG,iBAFT;AAGL,IAAA,QAAQ,EACN,kBAACW,KAAD,EAAW;AACTL,MAAAA,aAAa,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;AACD,KANE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANL,MAFO,eAmBP;AACG,IAAA,SAAS,EAAG,YADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAEEd,UAAU,CAACe,MAAX,CAAkBP,eAAlB,EAAmCQ,GAAnC,CAAuCf,SAAvC,CAFF,MAnBO,CAAT;AA4BD;;AAED,eAAeI,GAAf","sourcesContent":["import React, {\n  useState\n} from \"react\";\nimport Card from \"./Card\";\nimport emojipedia from \"../emojipedia\";\n\nfunction EmojiData(emojipedia) {\n  return ( < Card key = {\n      emojipedia.name\n    }\n    emoji = {\n      emojipedia.emoji\n    }\n    name = {\n      emojipedia.name\n    }\n    meaning = {\n      emojipedia.meaning\n    }\n    />);\n  }\n\n  function App() {\n\n    const [searchTerm, setSearchTerm] = useState(\"\");\n\n    function EmojiDataFilter(emojipedia) {\n      if (searchTerm == \"\") {\n        return EmojiData;\n      } else if (emojipedia.name.toLocaleLowerCase().includes(searchTerm.toLowerCase())) {\n        return EmojiData;\n      }\n    }\n\n    return ( <\n      div >\n      <\n      div >\n      <\n      h1 >\n      <\n      span > EmojipediaðŸ™‚ < /span> <\n      /h1> <\n      input type = \"text\"\n      placeholder = \"Search Emoji...\"\n      onChange = {\n        (event) => {\n          setSearchTerm(event.target.value);\n        }\n      }\n      /> <\n      /div>\n\n      <\n      dl className = \"dictionary\" > {\n        emojipedia.filter(EmojiDataFilter).map(EmojiData)\n      } <\n      /dl>\n\n      <\n      /div>\n    );\n  }\n\n  export default App;"]},"metadata":{},"sourceType":"module"}